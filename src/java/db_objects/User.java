package db_objects;
// Generated 29.07.2011 14:49:44 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="j_chat"
)
public class User  implements java.io.Serializable {


     private Long id;
     private String name;
     private String password;
     private String role;
     private Date lastLogin;
     private Date shownDate;
     private short messagesOnPage;
     private short albumsOnPage;
     private short photosOnPage;
     private String avatar;
     private Set<Album> albums = new HashSet<Album>(0);
     private Set<Message> messages = new HashSet<Message>(0);

    public User() {
    }

	
    public User(String name, String password, String role, short messagesOnPage, short albumsOnPage, short photosOnPage) {
        this.name = name;
        this.password = password;
        this.role = role;
        this.messagesOnPage = messagesOnPage;
        this.albumsOnPage = albumsOnPage;
        this.photosOnPage = photosOnPage;
    }
    public User(String name, String password, String role, Date lastLogin, Date shownDate, short messagesOnPage, short albumsOnPage, short photosOnPage, String avatar, Set<Album> albums, Set<Message> messages) {
       this.name = name;
       this.password = password;
       this.role = role;
       this.lastLogin = lastLogin;
       this.shownDate = shownDate;
       this.messagesOnPage = messagesOnPage;
       this.albumsOnPage = albumsOnPage;
       this.photosOnPage = photosOnPage;
       this.avatar = avatar;
       this.albums = albums;
       this.messages = messages;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    
    @Column(name="name", nullable=false, length=30)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="password", nullable=false, length=32)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }
    
    @Column(name="role", nullable=false, length=64)
    public String getRole() {
        return this.role;
    }
    
    public void setRole(String role) {
        this.role = role;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_login", length=19)
    public Date getLastLogin() {
        return this.lastLogin;
    }
    
    public void setLastLogin(Date lastLogin) {
        this.lastLogin = lastLogin;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="shown_date", length=19)
    public Date getShownDate() {
        return this.shownDate;
    }
    
    public void setShownDate(Date shownDate) {
        this.shownDate = shownDate;
    }
    
    @Column(name="messages_on_page", nullable=false)
    public short getMessagesOnPage() {
        return this.messagesOnPage;
    }
    
    public void setMessagesOnPage(short messagesOnPage) {
        this.messagesOnPage = messagesOnPage;
    }
    
    @Column(name="albums_on_page", nullable=false)
    public short getAlbumsOnPage() {
        return this.albumsOnPage;
    }
    
    public void setAlbumsOnPage(short albumsOnPage) {
        this.albumsOnPage = albumsOnPage;
    }
    
    @Column(name="photos_on_page", nullable=false)
    public short getPhotosOnPage() {
        return this.photosOnPage;
    }
    
    public void setPhotosOnPage(short photosOnPage) {
        this.photosOnPage = photosOnPage;
    }
    
    @Column(name="avatar")
    public String getAvatar() {
        return this.avatar;
    }
    
    public void setAvatar(String avatar) {
        this.avatar = avatar;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="user")
    public Set<Album> getAlbums() {
        return this.albums;
    }
    
    public void setAlbums(Set<Album> albums) {
        this.albums = albums;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="user")
    public Set<Message> getMessages() {
        return this.messages;
    }
    
    public void setMessages(Set<Message> messages) {
        this.messages = messages;
    }




}


